<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.github.byzatic</groupId>
  <artifactId>java-byzatic-commons</artifactId>
  <version>0.0.6</version>
  <!--<version>0.0.6-SNAPSHOT</version>-->
  <packaging>jar</packaging>

  <name>JavaByzaticCommons</name>
  <description>JavaByzaticCommons is a collection of utilities and shared components to streamline Java development</description>
  <url>https://github.com/byzatic/JavaByzaticCommons</url>

  <licenses>
    <license>
      <name>The Apache-2.0 License</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>byzatic</id>
      <name>Svyatoslav Vlasov</name>
      <email>s.vlasov.home@icloud.com</email>
      <url>https://github.com/byzatic</url>
    </developer>
  </developers>

  <scm>
    <url>https://github.com/byzatic/JavaByzaticCommons</url>
    <connection>scm:git:git://github.com/byzatic/JavaByzaticCommons.git</connection>
    <developerConnection>scm:git:ssh://github.com/byzatic/JavaByzaticCommons.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <!--  <distributionManagement>-->
  <!--    <snapshotRepository>-->
  <!--      <id>central</id>-->
  <!--      <url>https://s01.oss.sonatype.org/content/repositories/snapshots/</url>-->
  <!--    </snapshotRepository>-->
  <!--    <repository>-->
  <!--      <id>central</id>-->
  <!--      <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>-->
  <!--    </repository>-->
  <!--  </distributionManagement>-->

  <repositories>
    <repository>
      <name>Central Portal Snapshots</name>
      <id>central-portal-snapshots</id>
      <url>https://central.sonatype.com/repository/maven-snapshots/</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>

  <properties>
    <project.java.version>17</project.java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <version.slf4j>2.0.17</version.slf4j>
    <version.logback>1.5.18</version.logback>
    <version.junit>4.13.2</version.junit>
    <version.jetbrains_annotations>21.0.1</version.jetbrains_annotations>
  </properties>

  <!-- manual set -->
  <dependencies>

    <!-- https://mvnrepository.com/artifact/com.google.errorprone/error_prone_annotations -->
    <dependency>
      <groupId>com.google.errorprone</groupId>
      <artifactId>error_prone_annotations</artifactId>
      <version>2.41.0</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-vfs2 -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-vfs2</artifactId>
      <version>2.10.0</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${version.slf4j}</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-core -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>${version.logback}</version>
      <scope>test</scope>
<!--      <scope>runtime</scope>-->
    </dependency>

    <!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-classic -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${version.logback}</version>
      <scope>test</scope>
<!--      <scope>runtime</scope>-->
    </dependency>

    <!-- https://mvnrepository.com/artifact/junit/junit -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${version.junit}</version>
      <scope>test</scope>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>5.7.1</version>
      <scope>test</scope>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.jetbrains/annotations -->
    <dependency>
      <groupId>org.jetbrains</groupId>
      <artifactId>annotations</artifactId>
      <version>${version.jetbrains_annotations}</version>
    </dependency>
  </dependencies>

  <!-- manual set -->
  <build>
    <plugins>

      <!-- GPG -->
      <!-- Signs the artifacts with a GPG key during the install phase to ensure authenticity and integrity,
      required for deployment to Maven Central. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-gpg-plugin</artifactId>
        <version>3.2.8</version>
        <executions>
          <execution>
            <id>sign-artifacts</id>
            <phase>install</phase>
            <goals>
              <goal>sign</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Source JAR -->
      <!-- Generates a source JAR containing the projectâ€™s .java files and attaches it to the build
      during the verify phase. This is also required for publication to Maven Central. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.3.1</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>verify</phase>
            <goals>
              <!--<goal>jar-no-fork</goal>-->
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Javadoc JAR -->
      <!-- Generates a Javadoc JAR and attaches it to the build during the verify phase.
      This is necessary for Maven Central publication. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.6.3</version>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <phase>verify</phase>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Compiles the Java source -->
      <!-- Compiles the Java source code using the specified source and target versions and character encoding. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.5.1</version>
        <configuration>
          <source>${project.java.version}</source>
          <target>${project.java.version}</target>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
      </plugin>

      <!-- Maven clean -->
      <!-- Deletes additional custom directories (logs/ and reports/) during the
      clean phase to keep the workspace tidy. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>${basedir}</directory>
              <includes>
                <include>logs/</include>
              </includes>
              <followSymlinks>false</followSymlinks>
            </fileset>
            <fileset>
              <directory>${basedir}</directory>
              <includes>
                <include>reports/</include>
              </includes>
              <followSymlinks>false</followSymlinks>
            </fileset>
          </filesets>
        </configuration>
      </plugin>

      <!-- Copies dependencies -->
      <!-- Copies all runtime dependencies into the target/lib directory during the package phase,
      which is useful for assembling distribution packages. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.8</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>target/lib</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Runs unit tests -->
      <!-- Runs unit tests during the test phase using JUnit (including JUnit 4.7+ via surefire-junit47).-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M4</version>
        <dependencies>
          <dependency>
            <groupId>org.apache.maven.surefire</groupId>
            <artifactId>surefire-junit47</artifactId>
            <version>3.0.0-M4</version>
          </dependency>
        </dependencies>
      </plugin>

      <!-- Runs integration tests-->
      <!-- Runs integration tests during the integration-test and verify phases,
      typically used for post-build verification.-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>3.0.0-M4</version>
        <executions>
          <execution>
            <id>integration-test</id>
            <goals>
              <goal>integration-test</goal>
            </goals>
          </execution>
          <execution>
            <id>verify</id>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Automates publishing to Maven Central-->
      <!-- Automates the process of publishing artifacts to Maven Central via Sonatype OSSRH,
      handling signing, staging, and releasing.-->
      <plugin>
        <groupId>org.sonatype.central</groupId>
        <artifactId>central-publishing-maven-plugin</artifactId>
        <version>0.8.0</version>
        <extensions>true</extensions>
        <configuration>
          <publishingServerId>central</publishingServerId>
          <!--<autoPublish>true</autoPublish>-->
          <!--<waitUntil>published</waitUntil>-->
        </configuration>
      </plugin>

    </plugins>
  </build>
  <!-- manual set end -->

  <!-- project end -->
</project>
